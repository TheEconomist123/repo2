{"remainingRequest":"D:\\oesbecc\\outScreen\\node_modules\\babel-loader\\lib\\index.js!D:\\oesbecc\\outScreen\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\oesbecc\\outScreen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\oesbecc\\outScreen\\node_modules\\vue-svg-icon\\Icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\oesbecc\\outScreen\\node_modules\\vue-svg-icon\\Icon.vue","mtime":1626312081769},{"path":"D:\\oesbecc\\outScreen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626312140594},{"path":"D:\\oesbecc\\outScreen\\node_modules\\babel-loader\\lib\\index.js","mtime":1626312110547},{"path":"D:\\oesbecc\\outScreen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626312140594},{"path":"D:\\oesbecc\\outScreen\\node_modules\\vue-loader\\lib\\index.js","mtime":1626312141896}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar convert = require(\"./lib/parse\");\n\nexport default {\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    scale: [Number, String],\n    spin: Boolean,\n    flip: {\n      validator: function validator(val) {\n        return val === 'horizontal' || val === 'vertical';\n      }\n    },\n    label: String,\n    index: String,\n    currentIndex: String\n  },\n  computed: {\n    normalizedScale: function normalizedScale() {\n      var scale = this.scale;\n      scale = typeof scale === 'undefined' ? 1 : Number(scale);\n\n      if (isNaN(scale) || scale <= 0) {\n        console.warn(\"Invalid prop: prop \\\"scale\\\" should be a number over 0.\", this);\n        return 1;\n      }\n\n      return scale;\n    },\n    clazz: function clazz() {\n      return {\n        'svg-icon': true,\n        spin: this.spin,\n        'flip-horizontal': this.flip === 'horizontal',\n        'flip-vertical': this.flip === 'vertical',\n        active: this.index === this.currentIndex\n      };\n    },\n    icon: function icon() {\n      var xml = require(\"!xml-loader!../../src/svg/\".concat(this.name, \".svg\"));\n\n      var t = xml.svg.$.viewBox.split(' ');\n      console.info(\"src/svg/\".concat(this.name, \".svg has been loaded\"));\n      return {\n        width: t[2],\n        height: t[3],\n        paths: convert.SVGtoArray(xml.svg)\n      };\n    },\n    box: function box() {\n      return \"0 0 \".concat(this.icon.width, \" \").concat(this.icon.height);\n    },\n    width: function width() {\n      return this.icon.width / 112 * this.normalizedScale;\n    },\n    height: function height() {\n      return this.icon.height / 112 * this.normalizedScale;\n    },\n    style: function style() {\n      if (this.normalizedScale === 1) {\n        return false;\n      }\n\n      return {\n        fontSize: this.normalizedScale + 'em'\n      };\n    }\n  },\n  register: function register() {\n    console.warn(\"inject deprecated since v1.2.0, SVG files can be loaded directly, so just delete the inject line.\");\n  }\n};",{"version":3,"sources":["Icon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,IAAA,OAAA,GAAA,OAAA,eAAA;;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CALA;AAMA,IAAA,IAAA,EAAA,OANA;AAOA,IAAA,IAAA,EAAA;AACA,MAAA,SAAA,EAAA,mBAAA,GAAA,EAAA;AACA,eAAA,GAAA,KAAA,YAAA,IAAA,GAAA,KAAA,UAAA;AACA;AAHA,KAPA;AAYA,IAAA,KAAA,EAAA,MAZA;AAaA,IAAA,KAAA,EAAA,MAbA;AAcA,IAAA,YAAA,EAAA;AAdA,GADA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA;AACA,MAAA,KAAA,GAAA,OAAA,KAAA,KAAA,WAAA,GAAA,CAAA,GAAA,MAAA,CAAA,KAAA,CAAA;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,IAAA,KAAA,IAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,4DAAA,IAAA;AACA,eAAA,CAAA;AACA;;AACA,aAAA,KAAA;AACA,KATA;AAUA,IAAA,KAVA,mBAUA;AACA,aAAA;AACA,oBAAA,IADA;AAEA,QAAA,IAAA,EAAA,KAAA,IAFA;AAGA,2BAAA,KAAA,IAAA,KAAA,YAHA;AAIA,yBAAA,KAAA,IAAA,KAAA,UAJA;AAKA,QAAA,MAAA,EAAA,KAAA,KAAA,KAAA,KAAA;AALA,OAAA;AAOA,KAlBA;AAmBA,IAAA,IAnBA,kBAmBA;AACA,UAAA,GAAA,GAAA,OAAA,qCAAA,KAAA,IAAA,UAAA;;AACA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,MAAA,OAAA,CAAA,IAAA,mBAAA,KAAA,IAAA;AACA,aAAA;AACA,QAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CADA;AAEA,QAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAFA;AAGA,QAAA,KAAA,EAAA,OAAA,CAAA,UAAA,CAAA,GAAA,CAAA,GAAA;AAHA,OAAA;AAKA,KA5BA;AA6BA,IAAA,GA7BA,iBA6BA;AACA,2BAAA,KAAA,IAAA,CAAA,KAAA,cAAA,KAAA,IAAA,CAAA,MAAA;AACA,KA/BA;AAgCA,IAAA,KAhCA,mBAgCA;AACA,aAAA,KAAA,IAAA,CAAA,KAAA,GAAA,GAAA,GAAA,KAAA,eAAA;AACA,KAlCA;AAmCA,IAAA,MAnCA,oBAmCA;AACA,aAAA,KAAA,IAAA,CAAA,MAAA,GAAA,GAAA,GAAA,KAAA,eAAA;AACA,KArCA;AAsCA,IAAA,KAtCA,mBAsCA;AACA,UAAA,KAAA,eAAA,KAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,aAAA;AACA,QAAA,QAAA,EAAA,KAAA,eAAA,GAAA;AADA,OAAA;AAGA;AA7CA,GAjBA;AAgEA,EAAA,QAAA,EAAA,oBAAA;AACA,IAAA,OAAA,CAAA,IAAA,CAAA,mGAAA;AACA;AAlEA,CAAA","sourcesContent":["<template>\n  <svg version=\"1.1\" :class=\"clazz\" :role=\"label ? 'img' : 'presentation'\" :aria-label=\"label\" :width=\"width\"\n       :height=\"height\" :viewBox=\"box\" :style=\"style\">\n    <path :d=\"path.d\" :fill=\"path.fill\" :stroke=\"path.stroke\" v-for=\"path in icon.paths\"/>\n  </svg>\n</template>\n\n<style>\n  .svg-icon {\n    display: inline-block;\n    fill: currentColor;\n  }\n\n  .svg-icon.flip-horizontal {\n    transform: scale(-1, 1);\n  }\n\n  .svg-icon.flip-vertical {\n    transform: scale(1, -1);\n  }\n\n  .svg-icon.spin {\n    animation: fa-spin 1s 0s infinite linear;\n  }\n\n  @keyframes fa-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n\n<script>\n\n  const convert = require('./lib/parse');\n\n  export default {\n    props: {\n      name: {\n        type: String,\n        required: true\n      },\n      scale: [Number, String],\n      spin: Boolean,\n      flip: {\n        validator: function (val) {\n          return val === 'horizontal' || val === 'vertical'\n        }\n      },\n      label: String,\n      index: String,\n      currentIndex: String\n    },\n    computed: {\n      normalizedScale() {\n        let scale = this.scale;\n        scale = typeof scale === 'undefined' ? 1 : Number(scale);\n        if (isNaN(scale) || scale <= 0) {\n          console.warn(`Invalid prop: prop \"scale\" should be a number over 0.`, this);\n          return 1\n        }\n        return scale\n      },\n      clazz() {\n        return {\n          'svg-icon': true,\n          spin: this.spin,\n          'flip-horizontal': this.flip === 'horizontal',\n          'flip-vertical': this.flip === 'vertical',\n          active: this.index === this.currentIndex\n        }\n      },\n      icon() {\n        let xml = require(`!xml-loader!../../src/svg/${this.name}.svg`);\n        const t = xml.svg.$.viewBox.split(' ');\n        console.info(`src/svg/${this.name}.svg has been loaded`);\n        return {\n          width: t[2],\n          height: t[3],\n          paths: convert.SVGtoArray(xml.svg)\n        }\n      },\n      box() {\n        return `0 0 ${this.icon.width} ${this.icon.height}`\n      },\n      width() {\n        return this.icon.width / 112 * this.normalizedScale\n      },\n      height() {\n        return this.icon.height / 112 * this.normalizedScale\n      },\n      style() {\n        if (this.normalizedScale === 1) {\n          return false\n        }\n        return {\n          fontSize: this.normalizedScale + 'em'\n        }\n      }\n    },\n    register: function () {\n      console.warn(\"inject deprecated since v1.2.0, SVG files can be loaded directly, so just delete the inject line.\")\n    },\n  }\n</script>\n"],"sourceRoot":"node_modules/vue-svg-icon"}]}